/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Casino, CasinoInterface } from "../Casino";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "quiantityPoints",
        type: "uint256",
      },
    ],
    name: "AmountDropped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: true,
        internalType: "string",
        name: "color",
        type: "string",
      },
    ],
    name: "CollorDropped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
    ],
    name: "Draw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "supplier",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numberOfWinner",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "bid",
        type: "uint256",
      },
    ],
    name: "Loser",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "supplier",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numberOfWinner",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "prize",
        type: "uint256",
      },
    ],
    name: "Winner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "intruder",
        type: "address",
      },
    ],
    name: "addToBlackList",
    type: "event",
  },
  {
    inputs: [],
    name: "RollTheDice",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "color",
        type: "string",
      },
    ],
    name: "SpinTheDrum",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "intruder",
        type: "address",
      },
    ],
    name: "addToBL",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "blackList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "casinoBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600180546001600160a01b0319163317905534600055610817806100296000396000f3fe60806040526004361061007b5760003560e01c80634838d1651161004e5780634838d165146101005780635518f916146101405780637988495b146101605780638da5cb5b1461017357600080fd5b80631c014c60146100805780631f741182146100a957806327e235e3146100b35780632e1a7d4d146100e0575b600080fd5b34801561008c57600080fd5b5061009660005481565b6040519081526020015b60405180910390f35b6100b16101ab565b005b3480156100bf57600080fd5b506100966100ce366004610627565b60026020526000908152604090205481565b3480156100ec57600080fd5b506100b16100fb366004610657565b61035e565b34801561010c57600080fd5b5061013061011b366004610627565b60036020526000908152604090205460ff1681565b60405190151581526020016100a0565b34801561014c57600080fd5b506100b161015b366004610627565b610465565b6100b161016e366004610686565b610559565b34801561017f57600080fd5b50600154610193906001600160a01b031681565b6040516001600160a01b0390911681526020016100a0565b3360009081526003602052604090205460ff16156102065760405162461bcd60e51b8152602060048201526013602482015272165bdd48185c9948189b1858dadb1a5cdd1959606a1b60448201526064015b60405180910390fd5b600061021061059c565b9050600061021c6105df565b90508082101561028757604051818152349033907f94b4e2c48cf2b76d509578f4b3cbbc5bc216268faac926f14e647d5363965d369060200160405180910390a3336000908152600260205260408120805434929061027c90849061074d565b9091555061035a9050565b808211156103035761029a346003610766565b33600090815260026020526040812080549091906102b990849061077d565b909155506102ca9050346003610766565b60405183815233907f83180aa4ac63459a0857ee4be800e29aa03c2426bdb949e15826b88ef0c668a29060200160405180910390a35050565b80820361035a5760405133907fcb29a06616b5d1a777c40bf47da3fcd72b3de9ccfcc31e73944a44f24463e51690600090a2336000908152600260205260408120805434929061035490849061077d565b90915550505b5050565b336000908152600260205260409020548111156103b05760405162461bcd60e51b815260206004820152601060248201526f4e6f7420656e6f7567682066756e647360801b60448201526064016101fd565b3360009081526003602052604090205460ff16156103fc5760405162461bcd60e51b8152602060048201526009602482015268165bdd481a5b88189b60ba1b60448201526064016101fd565b336000908152600260205260408120805483929061041b90849061074d565b9250508190555080600080828254610433919061074d565b9091555050604051339082156108fc029083906000818181858888f1935050505015801561035a573d6000803e3d6000fd5b6001546001600160a01b031633146104b45760405162461bcd60e51b81526020600482015260126024820152713cb7ba9030903737ba1030b71037bbb732b960711b60448201526064016101fd565b6001600160a01b03811660009081526003602052604090205460ff16156104da57600080fd5b6040516001600160a01b038216907f417c73a7d0d7bcc65f4ce8344c4e82f931f8ab6838efb1025b99e88de5af43c090600090a2336000908152600260205260408120548154909190819061053090849061077d565b90915550506001600160a01b03166000908152600360205260409020805460ff19166001179055565b806040516105679190610790565b6040519081900381209033907fb6f6ba57415ddb23cd67c7b7ce4fd709426ba208dc9d1716f51ed39562a6e02a90600090a350565b6000806105aa60d5426107bf565b604051909150819033907ff1110fa0a1aaea9f7fd7ffa6909d7a9e34889e69e4a5a9164efbea1b6feef37d90600090a3919050565b6000806101906000546105f291906107bf565b604051909150819030907ff1110fa0a1aaea9f7fd7ffa6909d7a9e34889e69e4a5a9164efbea1b6feef37d90600090a3919050565b60006020828403121561063957600080fd5b81356001600160a01b038116811461065057600080fd5b9392505050565b60006020828403121561066957600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561069857600080fd5b813567ffffffffffffffff808211156106b057600080fd5b818401915084601f8301126106c457600080fd5b8135818111156106d6576106d6610670565b604051601f8201601f19908116603f011681019083821181831017156106fe576106fe610670565b8160405282815287602084870101111561071757600080fd5b826020860160208301376000928101602001929092525095945050505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561076057610760610737565b92915050565b808202811582820484141761076057610760610737565b8082018082111561076057610760610737565b6000825160005b818110156107b15760208186018101518583015201610797565b506000920191825250919050565b6000826107dc57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122012432d8de48c81eeab939a316431a4c76f59d447302a36f17b45a7ce34acbf8064736f6c63430008120033";

type CasinoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CasinoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Casino__factory extends ContractFactory {
  constructor(...args: CasinoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Casino> {
    return super.deploy(overrides || {}) as Promise<Casino>;
  }
  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Casino {
    return super.attach(address) as Casino;
  }
  override connect(signer: Signer): Casino__factory {
    return super.connect(signer) as Casino__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CasinoInterface {
    return new utils.Interface(_abi) as CasinoInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Casino {
    return new Contract(address, _abi, signerOrProvider) as Casino;
  }
}
